- name: Ensure all hosts are in the /etc/hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item].ansible_host }} {{ item }}"
    state: present
  loop: "{{ groups['all'] }}"

- name: Ensure directory for public keys exists
  file:
    path: /tmp/auth_keys
    state: directory
  run_once: true  # Ensure this task runs only once on the control node

- name: Fetch SSH public keys from all nodes
  fetch:
    src: /root/.ssh/id_rsa.pub
    dest: /tmp/auth_keys/{{ inventory_hostname }}_id_rsa.pub
    flat: yes
  run_once: false  # Ensure this task runs on all nodes

- name: Debug fetched files on the control node
  command: ls -l /tmp/auth_keys/
  register: fetched_files
  run_once: true
  delegate_to: localhost

- name: Collect all SSH public keys on the control node
  shell: ls /tmp/auth_keys/*_id_rsa.pub
  register: key_files
  run_once: true
  delegate_to: localhost

- name: Debug collected file paths
  debug:
    msg: "Collected file paths: {{ key_files.stdout_lines }}"
  run_once: true
  delegate_to: localhost

- name: Read public key files and set them as facts
  set_fact:
    public_keys: "{{ public_keys | default([]) + [lookup('file', item)] }}"
  loop: "{{ key_files.stdout_lines }}"
  run_once: true
  delegate_to: localhost

- name: Ensure public_keys is a list
  set_fact:
    public_keys: "{{ public_keys | list }}"
  run_once: true
  delegate_to: localhost

- name: Debug public keys
  debug:
    msg: "Public keys: {{ public_keys }}"
  run_once: true
  delegate_to: localhost

- name: Add public keys to authorized_keys
  authorized_key:
    user: root
    state: present
    key: "{{ item }}"
  loop: "{{ public_keys }}"

- name: Turn off SSH StrictHostKeyChecking
  ansible.builtin.lineinfile:
    path: /etc/ssh/ssh_config
    line: "StrictHostKeyChecking no"
    regexp: '^\s*#?\s*StrictHostKeyChecking'
    state: present

- name: Check if the cluster already exists
  command: pvecm status
  register: cluster_status
  ignore_errors: yes
  failed_when: false  # Prevent task from failing if pvecm status fails
  changed_when: false  # Prevent task from being marked as changed  

- name: Create Proxmox primary
  command: pvecm create {{ cluster_name }}
  when: inventory_hostname == groups['all'][0] and cluster_status.rc != 0

- name: Wait for the cluster to be ready
  pause:
    seconds: 30
  when: inventory_hostname == groups['all'][0] and cluster_status.rc != 0

- name: Join nodes to the cluster
  command: pvecm add {{ primary_node }} -votes 0 -use_ssh
  when: inventory_hostname != groups['all'][0] and cluster_status.rc != 0
